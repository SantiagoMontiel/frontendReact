{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2019-08-09T12:33:06.257Z",
    "end": "2019-08-09T12:33:06.257Z",
    "duration": 160,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1b560fde-4f70-409e-aa48-83245535a633",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7ae37412-6ecc-46ad-b2e8-46a6a509db80",
          "title": "test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add context",
              "fullTitle": "test suite should add context",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Text\",\n    \"value\": \"simple string\"\n  },\n  {\n    \"title\": \"Link\",\n    \"value\": \"http://localhost:3000\"\n  },\n  {\n    \"title\": \"Image\",\n    \"value\": \"http://i.imgur.com/c4jt321.png\"\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": {\n      \"title\": \"expected output\",\n      \"value\": {\n        \"a\": 1,\n        \"b\": \"2\",\n        \"c\": \"d\"\n      }\n    }\n  }\n]",
              "code": "// context can be a simple string\naddTestContext('Text', 'simple string'); // context can be a url and the report will create a link\naddTestContext('Link', 'http://localhost:3000'); // context can be an image url and the report will show it inline\naddTestContext('Image', 'http://i.imgur.com/c4jt321.png'); // context can be an object with title and value properties\naddTestContext('Response', {\n  title: 'expected output',\n  value: {\n    a: 1,\n    b: '2',\n    c: 'd'\n  }\n});",
              "err": {},
              "uuid": "e63b0794-f01c-45b1-a3bc-196f59386f9e",
              "parentUUID": "7ae37412-6ecc-46ad-b2e8-46a6a509db80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e63b0794-f01c-45b1-a3bc-196f59386f9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportTitle": "Front-End React - Platzi Badges",
        "reportPageTitle": "Front-End React - Platzi Badges",
        "charts": true,
        "reportDir": "cypress/reports/mocha",
        "quiet": true,
        "overwrite": true,
        "html": true,
        "json": true,
        "inline": true
      },
      "version": "4.0.1"
    }
  }
}